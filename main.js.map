{"version":3,"sources":["./src/app/store/picture-list/reducer.ts","./src/app/shared/services/firebase/firebase-errors.service.ts","./src/app/store/user/actions.ts","./src/environments/environment.ts","./src/app/store/toast-notice/selectors.ts","./src/app/shared/services/firebase/firebase-auth.service.ts","./src/app/store/user/reducer.ts","./src/app/store/user/effect.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/store/toast-notice/actions.ts","./src/app/store/index.ts","./src/app/app.module.ts","./src/app/shared/components/top-bar/top-bar.component.ts","./src/app/shared/components/top-bar/top-bar.component.html","./src/app/shared/services/firebase/firestore.service.ts","./src/app/store/picture-list/effect.ts","./src/app/store/user/selectors.ts","./src/app/shared/components/toast-notice/toast-notice.component.ts","./src/app/shared/components/toast-notice/toast-notice.component.html","./src/app/store/toast-notice/effect.ts","./src/app/app-routing.module.ts","./src/app/store/picture-list/actions.ts","./src/app/store/toast-notice/reducer.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { createReducer, on } from '@ngrx/store';\r\nimport { PictureList } from 'src/app/shared/interfaces/picture-list.interface';\r\nimport { clearAllPicture, loadPicturesSuccess } from './actions';\r\n\r\nexport interface PictureListState {\r\n  pictureList: PictureList;\r\n}\r\n\r\nconst pictureListInitialState: PictureListState = {\r\n  pictureList: {},\r\n};\r\n\r\nexport const pictureListReducer = createReducer(\r\n  pictureListInitialState,\r\n  on(loadPicturesSuccess, (state, { newPictureList }) => ({\r\n    ...state,\r\n    pictureList: newPictureList,\r\n  })),\r\n  on(clearAllPicture, (state) => ({ ...state, pictureList: {} }))\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiError } from 'src/app/shared/interfaces/api-error.interface';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FirebaseErrorsService {\r\n  public getMessageFromError(error: ApiError): string {\r\n    switch (error.message) {\r\n      case \"Invalid Query. A non-empty array is required for 'in' filters.\":\r\n        return 'Ops... Nothing found =(';\r\n\r\n      default:\r\n        return error.message;\r\n    }\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { ApiError } from 'src/app/shared/interfaces/api-error.interface';\r\nimport { User } from 'src/app/shared/interfaces/user.interface';\r\nimport { UserActionsType } from './constant';\r\n\r\nexport const loadUser = createAction(\r\n  UserActionsType.loadUser,\r\n  props<{ email: string; password: string }>()\r\n);\r\n\r\nexport const loadUserSuccess = createAction(\r\n  UserActionsType.loadUserSuccess,\r\n  props<{ user: User }>()\r\n);\r\n\r\nexport const loadUserFailure = createAction(\r\n  UserActionsType.loadUserFailure,\r\n  props<{ error: ApiError }>()\r\n);\r\n\r\nexport const createUser = createAction(\r\n  UserActionsType.createUser,\r\n  props<{ email: string; password: string; name: string }>()\r\n);\r\n\r\nexport const createUserSuccess = createAction(\r\n  UserActionsType.createUserSuccess,\r\n  props<{ uid: string; email: string; password: string; name: string }>()\r\n);\r\n\r\nexport const createUserFailure = createAction(\r\n  UserActionsType.createUserFailure,\r\n  props<{ error: ApiError }>()\r\n);\r\n\r\nexport const initializeUser = createAction(UserActionsType.initializeUser);\r\n\r\nexport const logOutUser = createAction(UserActionsType.logoutUser);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyBQuVIrVSUH9y7mjQH2yq4OhtMMHXAh2zQ',\n    authDomain: 'innowise-lab-internship-level2.firebaseapp.com',\n    projectId: 'innowise-lab-internship-level2',\n    storageBucket: 'innowise-lab-internship-level2.appspot.com',\n    messagingSenderId: '1082115697714',\n    appId: '1:1082115697714:web:78909c9fab854216b9a02b',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nconst selectToastNoticeFeature = createFeatureSelector<{\r\n  message: string;\r\n  messageType: string;\r\n}>('toastNotice');\r\n\r\nexport const selectToastNotice = createSelector(\r\n  selectToastNoticeFeature,\r\n  (state) => state\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { Store } from '@ngrx/store';\r\nimport { from, Observable, Observer } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../../interfaces/user.interface';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FirebaseAuthService {\r\n  constructor(private firebaseAuth: AngularFireAuth, private store$: Store) {}\r\n\r\n  public signIn(email: string, password: string): Observable<User> {\r\n    return from(\r\n      this.firebaseAuth.signInWithEmailAndPassword(email, password)\r\n    ).pipe(\r\n      map((response) => {\r\n        const { user } = response;\r\n        return {\r\n          uid: user?.uid == null ? '' : user.uid,\r\n          email: user?.email == null ? '' : user.email,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  public signUp(email: string, password: string): Observable<User> {\r\n    return from(\r\n      this.firebaseAuth.createUserWithEmailAndPassword(email, password)\r\n    ).pipe(\r\n      map((response) => {\r\n        const { user } = response;\r\n        return {\r\n          uid: user?.uid == null ? '' : user.uid,\r\n          email: user?.email == null ? '' : user.email,\r\n        };\r\n      })\r\n    );\r\n  }\r\n\r\n  public logOut(): void {\r\n    this.firebaseAuth.signOut();\r\n  }\r\n\r\n  public initializeUser(): Observable<User> {\r\n    return new Observable((observer: Observer<User>) => {\r\n      this.firebaseAuth.onAuthStateChanged((currentUser) => {\r\n        if (currentUser) {\r\n          observer.next({\r\n            uid: currentUser?.uid == null ? '' : currentUser.uid,\r\n            email: currentUser?.email == null ? '' : currentUser.email,\r\n          });\r\n        }\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { loadUserSuccess, logOutUser } from './actions';\r\n\r\nexport interface UserState {\r\n  uid: string;\r\n  email: string;\r\n}\r\n\r\nconst userInitialState: UserState = {\r\n  uid: '',\r\n  email: '',\r\n};\r\n\r\nexport const userReducer = createReducer(\r\n  userInitialState,\r\n  on(loadUserSuccess, (state, { user }) => ({\r\n    ...state,\r\n    uid: user.uid,\r\n    email: user.email,\r\n  })),\r\n  on(logOutUser, (state) => ({ ...state, uid: '', email: '' }))\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\nimport { User } from 'src/app/shared/interfaces/user.interface';\r\nimport { FirebaseAuthService } from 'src/app/shared/services/firebase/firebase-auth.service';\r\nimport { FirebaseErrorsService } from 'src/app/shared/services/firebase/firebase-errors.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firebase/firestore.service';\r\nimport { ToastMessageType } from '../../shared/constants/message-type.constant';\r\nimport { setMessage } from '../toast-notice/actions';\r\nimport {\r\n  createUser,\r\n  createUserFailure,\r\n  createUserSuccess,\r\n  initializeUser,\r\n  loadUser,\r\n  loadUserFailure,\r\n  loadUserSuccess,\r\n  logOutUser,\r\n} from './actions';\r\n\r\n@Injectable()\r\nexport class UserEffect {\r\n  private loadUser$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(loadUser),\r\n      switchMap((action) =>\r\n        this.firebaseAuthService.signIn(action.email, action.password).pipe(\r\n          map((user) => loadUserSuccess({ user })),\r\n          catchError(async (error) => loadUserFailure({ error }))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  private createUser$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(createUser),\r\n      switchMap((action) =>\r\n        this.firebaseAuthService.signUp(action.email, action.password).pipe(\r\n          map((user) => {\r\n            const { name, password } = action;\r\n            const { email, uid } = user;\r\n            return createUserSuccess({ uid, email, password, name });\r\n          }),\r\n          catchError(async (error) => createUserFailure({ error }))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  private createUserSuccess$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(createUserSuccess),\r\n      switchMap((action) =>\r\n        this.firestore.addNewUser(action.uid, action.name).pipe(\r\n          map(() => {\r\n            const user: User = {\r\n              uid: action.uid,\r\n              email: action.email,\r\n            };\r\n            return loadUserSuccess({ user });\r\n          })\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  private createUserFailure$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(createUserFailure),\r\n      map((action) => {\r\n        const message = this.firebaseErrorsService.getMessageFromError(\r\n          action.error\r\n        );\r\n        const messageType = ToastMessageType.error;\r\n        return setMessage({ message, messageType });\r\n      })\r\n    )\r\n  );\r\n\r\n  private initializeUser$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(initializeUser),\r\n      switchMap(() =>\r\n        this.firebaseAuthService\r\n          .initializeUser()\r\n          .pipe(map((user) => loadUserSuccess({ user })))\r\n      )\r\n    )\r\n  );\r\n\r\n  private logOutUser$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(logOutUser),\r\n        map(() => this.firebaseAuthService.logOut())\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n\r\n  private loadUserFailure$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(loadUserFailure),\r\n      map((action) => {\r\n        const message = this.firebaseErrorsService.getMessageFromError(\r\n          action.error\r\n        );\r\n        const messageType = ToastMessageType.error;\r\n        return setMessage({ message, messageType });\r\n      })\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private firebaseAuthService: FirebaseAuthService,\r\n    private firestore: FirestoreService,\r\n    private firebaseErrorsService: FirebaseErrorsService\r\n  ) {}\r\n}\r\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { ToastNoticeComponent } from './shared/components/toast-notice/toast-notice.component';\nimport { State } from './store';\nimport { selectToastNotice } from './store/toast-notice/selectors';\nimport { initializeUser } from './store/user/actions';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  @ViewChild('toastContainer', { read: ViewContainerRef })\n  public toastContainer: ViewContainerRef;\n\n  constructor(\n    private store$: Store<State>,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  public ngOnInit(): void {\n    this.store$.dispatch(initializeUser());\n  }\n\n  public ngAfterViewInit(): void {\n    this.store$\n      .pipe(select(selectToastNotice))\n      .subscribe((toastNotice) =>\n        this.createToast(toastNotice.message, toastNotice.messageType)\n      );\n  }\n\n  public createToast(message: string, messageType: string): void {\n    if (message === '') {\n      this.toastContainer.clear();\n    } else {\n      const factory = this.componentFactoryResolver.resolveComponentFactory(\n        ToastNoticeComponent\n      );\n      const component = this.toastContainer.createComponent(factory);\n      component.instance.messageType = messageType;\n      component.instance.message = message;\n    }\n    this.changeDetectorRef.markForCheck();\n  }\n}\n","<template #toastContainer></template>\r\n<app-top-bar class=\"window-div\"></app-top-bar>\r\n<router-outlet></router-outlet>\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { ToastNoticeActionsType } from './constant';\r\n\r\nexport const setMessage = createAction(\r\n  ToastNoticeActionsType.setMessage,\r\n  props<{ message: string; messageType: string }>()\r\n);\r\n\r\nexport const removeMessage = createAction(ToastNoticeActionsType.removeMessage);\r\n","import { ActionReducerMap } from '@ngrx/store';\r\nimport { pictureListReducer, PictureListState } from './picture-list/reducer';\r\nimport { toastNoticeReducer, ToastNoticeState } from './toast-notice/reducer';\r\nimport { userReducer, UserState } from './user/reducer';\r\n\r\nexport interface State {\r\n  user: UserState;\r\n  toastNotice: ToastNoticeState;\r\n  pictureList: PictureListState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State, any> = {\r\n  user: userReducer,\r\n  toastNotice: toastNoticeReducer,\r\n  pictureList: pictureListReducer,\r\n};\r\n","import { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from 'src/environments/environment';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopBarComponent } from './shared/components/top-bar/top-bar.component';\nimport { UserEffect } from './store/user/effect';\nimport { ToastNoticeEffect } from './store/toast-notice/effect';\nimport { PictureListEffect } from './store/picture-list/effect';\nimport { reducers } from './store';\n\n@NgModule({\n  declarations: [AppComponent, TopBarComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireAuthModule,\n    StoreModule.forRoot(reducers),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([UserEffect, ToastNoticeEffect, PictureListEffect]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { State } from 'src/app/store';\r\nimport { logOutUser } from 'src/app/store/user/actions';\r\nimport { selectUserUid } from 'src/app/store/user/selectors';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TopBarComponent {\r\n  public uid$: Observable<string> = this.store$.pipe(select(selectUserUid));\r\n\r\n  constructor(private store$: Store<State>, private router: Router) {}\r\n\r\n  public logOut(): void {\r\n    this.store$.dispatch(logOutUser());\r\n    this.uid$.subscribe((uid) => {\r\n      if (!uid) {\r\n        this.router.navigate(['']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<a routerLink=\"/constructor\" routerLinkActive=\"activeLink\">Constructor</a>\r\n<a routerLink=\"/gallery\" routerLinkActive=\"activeLink\">Gallery</a>\r\n<a\r\n  *ngIf=\"(uid$ | async) === ''; else authUserTemplate\"\r\n  routerLink=\"/auth\"\r\n  routerLinkActive=\"activeLink\"\r\n>\r\n  Sign In\r\n</a>\r\n<ng-template #authUserTemplate>\r\n  <a routerLink=\"/my-gallery\" routerLinkActive=\"activeLink\">My pictures</a>\r\n  <a (click)=\"logOut()\" routerLinkActive=\"activeLink\">LogOut</a>\r\n</ng-template>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  AngularFirestore,\r\n  CollectionReference,\r\n  DocumentReference,\r\n  QuerySnapshot,\r\n} from '@angular/fire/firestore';\r\nimport { from, Observable } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\nimport { Criterion } from '../../interfaces/criterion.interface';\r\nimport { PictureList } from '../../interfaces/picture-list.interface';\r\nimport { PictureData } from './interfaces/picture-data.interface';\r\nimport { UserData } from './interfaces/user-data.interface';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FirestoreService {\r\n  private collectionPicturesRef: CollectionReference<unknown>;\r\n\r\n  private collectionUsersRef: CollectionReference<unknown>;\r\n\r\n  constructor(private angularFirestore: AngularFirestore) {\r\n    this.collectionPicturesRef = this.angularFirestore.collection(\r\n      'Pictures'\r\n    ).ref;\r\n    this.collectionUsersRef = this.angularFirestore.collection('Users').ref;\r\n  }\r\n\r\n  public addNewPicture(\r\n    pictureSrc: string,\r\n    userId: string\r\n  ): Observable<DocumentReference<unknown>> {\r\n    const data = {\r\n      pictureSrc,\r\n      userId,\r\n      dateAdded: new Date(),\r\n    };\r\n    return from(this.collectionPicturesRef.add(data));\r\n  }\r\n\r\n  public addNewUser(\r\n    uid: string,\r\n    name: string\r\n  ): Observable<DocumentReference<unknown>> {\r\n    const newUser = {\r\n      uid,\r\n      name,\r\n    };\r\n    return from(this.collectionUsersRef.add(newUser));\r\n  }\r\n\r\n  public removePicture(pictureId: string): Observable<void> {\r\n    return from(this.collectionPicturesRef.doc(pictureId).delete());\r\n  }\r\n\r\n  public getPictures(criterion: Criterion): Observable<PictureList> {\r\n    return this.returnRequestByCriterion(criterion).pipe(\r\n      switchMap((picturesData) => {\r\n        const usersId = [\r\n          ...new Set(\r\n            picturesData.docs.map(\r\n              (pictureData) => (pictureData.data() as PictureData).userId\r\n            )\r\n          ),\r\n        ];\r\n        return from(\r\n          this.collectionUsersRef.where('uid', 'in', usersId).get()\r\n        ).pipe(\r\n          map((usersData) => {\r\n            return picturesData.docs.reduce((pictureList, picture) => {\r\n              const { pictureSrc, userId } = picture.data() as PictureData;\r\n              const { name } = usersData.docs\r\n                .find((value) => {\r\n                  return (value.data() as UserData).uid === userId;\r\n                })\r\n                .data() as UserData;\r\n              pictureList[picture.id] = { pictureSrc, name };\r\n              return pictureList;\r\n            }, {} as PictureList);\r\n          })\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  private getUidByUsername(name: string): Observable<string> {\r\n    return from(this.collectionUsersRef.where('name', '==', name).get()).pipe(\r\n      map((userData) => {\r\n        if (userData.size > 0) {\r\n          return (userData.docs.pop().data() as UserData).uid;\r\n        }\r\n        return '';\r\n      })\r\n    );\r\n  }\r\n\r\n  private returnRequestByCriterion(\r\n    criterion: Criterion\r\n  ): Observable<QuerySnapshot<unknown>> {\r\n    switch (criterion.type) {\r\n      case 'uid':\r\n        return from(\r\n          this.collectionPicturesRef\r\n            .where('userId', '==', criterion.value)\r\n            .limit(criterion.limit)\r\n            .get()\r\n        );\r\n      case 'author':\r\n        return from(\r\n          this.getUidByUsername(criterion.value).pipe(\r\n            switchMap((uid) =>\r\n              this.collectionPicturesRef\r\n                .where('userId', '==', uid)\r\n                .limit(criterion.limit)\r\n                .get()\r\n            )\r\n          )\r\n        );\r\n      default:\r\n        return from(\r\n          this.collectionPicturesRef\r\n            .orderBy('dateAdded', 'desc')\r\n            .limit(criterion.limit)\r\n            .get()\r\n        );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { catchError, map, switchMap, withLatestFrom } from 'rxjs/operators';\r\nimport { FirebaseErrorsService } from 'src/app/shared/services/firebase/firebase-errors.service';\r\nimport { FirestoreService } from 'src/app/shared/services/firebase/firestore.service';\r\nimport { State } from '..';\r\nimport { ToastMessageType } from '../../shared/constants/message-type.constant';\r\nimport { setMessage } from '../toast-notice/actions';\r\nimport { selectUserUid } from '../user/selectors';\r\nimport {\r\n  addPicture,\r\n  addPictureFailure,\r\n  addPictureSuccess,\r\n  loadPictures,\r\n  loadPicturesFailure,\r\n  loadPicturesSuccess,\r\n  removePicture,\r\n  removePictureFailure,\r\n  removePictureSuccess,\r\n} from './actions';\r\n\r\n@Injectable()\r\nexport class PictureListEffect {\r\n  private addPicture$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(addPicture),\r\n      withLatestFrom(this.store$.pipe(select(selectUserUid))),\r\n      switchMap(([action, uid]) =>\r\n        this.firestore.addNewPicture(action.pictureSrc, uid).pipe(\r\n          map(() => {\r\n            const message = 'Picture added successfully';\r\n            return addPictureSuccess({ message });\r\n          }),\r\n          catchError(async (error) => addPictureFailure({ error }))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  private loadPictures$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(loadPictures),\r\n      switchMap((action) =>\r\n        this.firestore.getPictures(action.criterion).pipe(\r\n          map((newPictureList) => loadPicturesSuccess({ newPictureList })),\r\n          catchError(async (error) => loadPicturesFailure({ error }))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  private removePicture$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(removePicture),\r\n      switchMap((action) =>\r\n        this.firestore.removePicture(action.pictureId).pipe(\r\n          map(() => {\r\n            const message = 'Picture removed successfully';\r\n            return removePictureSuccess({ message });\r\n          }),\r\n          catchError(async (error) => removePictureFailure({ error }))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  public addPictureSuccess$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(addPictureSuccess),\r\n      map((action) => {\r\n        const { message } = action;\r\n        const messageType = ToastMessageType.successfully;\r\n        return setMessage({ message, messageType });\r\n      })\r\n    )\r\n  );\r\n\r\n  private addPictureFailure$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(addPictureFailure),\r\n      map((action) => {\r\n        const message = this.firebaseErrorService.getMessageFromError(\r\n          action.error\r\n        );\r\n        const messageType = ToastMessageType.error;\r\n        return setMessage({ message, messageType });\r\n      })\r\n    )\r\n  );\r\n\r\n  private removePictureSuccess$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(removePictureSuccess),\r\n      map((action) => {\r\n        const { message } = action;\r\n        const messageType = ToastMessageType.successfully;\r\n        return setMessage({ message, messageType });\r\n      })\r\n    )\r\n  );\r\n\r\n  private removePictureFailure$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(removePictureFailure),\r\n      map((action) => {\r\n        const message = this.firebaseErrorService.getMessageFromError(\r\n          action.error\r\n        );\r\n        const messageType = ToastMessageType.error;\r\n        return setMessage({ message, messageType });\r\n      })\r\n    )\r\n  );\r\n\r\n  private loadPicturesFailure$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(loadPicturesFailure),\r\n      map((action) => {\r\n        const message = this.firebaseErrorService.getMessageFromError(\r\n          action.error\r\n        );\r\n        const messageType = ToastMessageType.error;\r\n        return setMessage({ message, messageType });\r\n      })\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private action$: Actions,\r\n    private firestore: FirestoreService,\r\n    private store$: Store<State>,\r\n    private firebaseErrorService: FirebaseErrorsService\r\n  ) {}\r\n}\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { User } from 'src/app/shared/interfaces/user.interface';\r\n\r\nconst selectUserFeature = createFeatureSelector<User>('user');\r\n\r\nexport const selectUserEmail = createSelector(\r\n  selectUserFeature,\r\n  (state: User): string => state.email\r\n);\r\n\r\nexport const selectUserUid = createSelector(\r\n  selectUserFeature,\r\n  (state: User): string => state.uid\r\n);\r\n","import { animate, style, transition, trigger } from '@angular/animations';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { ToastMessageType } from '../../constants/message-type.constant';\r\n\r\n@Component({\r\n  selector: 'app-toast-notice',\r\n  templateUrl: './toast-notice.component.html',\r\n  styleUrls: ['./toast-notice.component.scss'],\r\n  animations: [\r\n    trigger('toastOpenClose', [\r\n      transition(':enter', [\r\n        style({ opacity: '0' }),\r\n        animate('200ms ease-in', style({ opacity: '1' })),\r\n      ]),\r\n      transition(':leave', [animate('200ms ease-in', style({ opacity: '0' }))]),\r\n    ]),\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ToastNoticeComponent implements OnInit {\r\n  @Input()\r\n  public message: string;\r\n\r\n  @Input()\r\n  public messageType: string;\r\n\r\n  public background: string;\r\n\r\n  public ngOnInit(): void {\r\n    switch (this.messageType) {\r\n      case ToastMessageType.error:\r\n        this.background = 'red';\r\n        break;\r\n      case ToastMessageType.successfully:\r\n        this.background = 'green';\r\n        break;\r\n      default:\r\n        this.background = 'red';\r\n    }\r\n  }\r\n}\r\n","<div class=\"toast\" [style.background]=\"background\" [@toastOpenClose]>\r\n  <p>{{ message }}</p>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { removeMessage, setMessage } from './actions';\r\n\r\n@Injectable()\r\nexport class ToastNoticeEffect {\r\n  private setMessage$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(setMessage),\r\n      delay(5000),\r\n      map(() => removeMessage())\r\n    )\r\n  );\r\n\r\n  constructor(private action$: Actions) {}\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/gallery', pathMatch: 'full' },\n  {\n    path: 'auth',\n    loadChildren: () =>\n      import('./modules/auth/auth.module').then((m) => m.AuthModule),\n  },\n  {\n    path: 'constructor',\n    loadChildren: () =>\n      import('./modules/mini-paint/mini-paint.module').then(\n        (m) => m.MiniPaintModule\n      ),\n  },\n  {\n    path: 'gallery',\n    loadChildren: () =>\n      import('./modules/gallery/gallery.module').then(\n        (m) => m.PictureListModule\n      ),\n  },\n  {\n    path: 'my-gallery',\n    loadChildren: () =>\n      import('./modules/my-gallery/my-gallery.module').then(\n        (m) => m.MyGalleryModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { createAction, props } from '@ngrx/store';\r\nimport { ApiError } from 'src/app/shared/interfaces/api-error.interface';\r\nimport { Criterion } from 'src/app/shared/interfaces/criterion.interface';\r\nimport { PictureList } from 'src/app/shared/interfaces/picture-list.interface';\r\nimport { PictureListActionsType } from './constant';\r\n\r\nexport const loadPictures = createAction(\r\n  PictureListActionsType.loadPictures,\r\n  props<{ criterion: Criterion }>()\r\n);\r\n\r\nexport const loadPicturesSuccess = createAction(\r\n  PictureListActionsType.loadPicturesSuccess,\r\n  props<{ newPictureList: PictureList }>()\r\n);\r\n\r\nexport const loadPicturesFailure = createAction(\r\n  PictureListActionsType.loadPicturesFailure,\r\n  props<{ error: ApiError }>()\r\n);\r\n\r\nexport const addPicture = createAction(\r\n  PictureListActionsType.addPicture,\r\n  props<{ pictureSrc: string }>()\r\n);\r\n\r\nexport const addPictureSuccess = createAction(\r\n  PictureListActionsType.addPictureSuccess,\r\n  props<{ message: string }>()\r\n);\r\n\r\nexport const addPictureFailure = createAction(\r\n  PictureListActionsType.addPictureFailure,\r\n  props<{ error: ApiError }>()\r\n);\r\n\r\nexport const removePicture = createAction(\r\n  PictureListActionsType.removePicture,\r\n  props<{ pictureId: string }>()\r\n);\r\n\r\nexport const removePictureSuccess = createAction(\r\n  PictureListActionsType.removePictureSuccess,\r\n  props<{ message: string }>()\r\n);\r\n\r\nexport const removePictureFailure = createAction(\r\n  PictureListActionsType.removePictureFailure,\r\n  props<{ error: ApiError }>()\r\n);\r\n\r\nexport const clearAllPicture = createAction(\r\n  PictureListActionsType.clearAllPicture\r\n);\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { removeMessage, setMessage } from './actions';\r\n\r\nexport interface ToastNoticeState {\r\n  message: string;\r\n  messageType: string;\r\n}\r\n\r\nconst toastNoticeInitializeState: ToastNoticeState = {\r\n  message: '',\r\n  messageType: '',\r\n};\r\n\r\nexport const toastNoticeReducer = createReducer(\r\n  toastNoticeInitializeState,\r\n  on(setMessage, (state, { message, messageType }) => ({\r\n    ...state,\r\n    message,\r\n    messageType,\r\n  })),\r\n  on(removeMessage, (state) => ({ ...state, message: '', messageType: '' }))\r\n);\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}