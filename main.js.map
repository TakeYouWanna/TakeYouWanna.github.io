{"version":3,"sources":["./src/environments/environment.ts","./src/app/shared/services/firebase/firebase-auth.service.ts","./src/app/shared/services/data/user-data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/top-bar/top-bar.component.html","./src/app/shared/top-bar/top-bar.component.ts","./src/app/app.module.ts","./src/app/shared/services/data/task-data.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,wCAAwC;QACpD,SAAS,EAAE,wBAAwB;QACnC,WAAW,EAAE,4DAA4D;QACzE,aAAa,EAAE,oCAAoC;QACnD,iBAAiB,EAAE,cAAc;QACjC,KAAK,EAAE,2CAA2C;QAClD,aAAa,EAAE,cAAc;KAC9B;CACF;AACD;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACtBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACH;;;AAM7B,MAAM,mBAAmB;IAC9B,YAAqB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAE/C,MAAM,CAAE,KAAa,EAAE,QAAgB;QAC5C,OAAO,iDAAI,CACT,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAC9D,CAAC,IAAI,CACJ,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACf,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI;YAC1B,OAAO;gBACL,GAAG,EAAE,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,KAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;gBACtC,KAAK,EAAE,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,KAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;aAC7C;QACH,CAAC,CAAC,CACH;IACH,CAAC;IAEM,MAAM,CAAE,KAAa,EAAE,QAAgB;QAC5C,OAAO,iDAAI,CACT,IAAI,CAAC,YAAY,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC,CAClE,CAAC,IAAI,CACJ,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACf,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI;YAC1B,OAAO;gBACL,GAAG,EAAE,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,KAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;gBACtC,KAAK,EAAE,KAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,KAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;aAC7C;QACH,CAAC,CAAC,CACH;IACH,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;IAC7B,CAAC;;sFAjCU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;;;;;;;;;;;;;ACNpB;AAAA;AAAA;AAAA;AAAsC;;AAM/B,MAAM,eAAe;IAM1B;QALO,UAAK,GAA0B,IAAI,oDAAe,CAAO;YAC9D,GAAG,EAAE,EAAE;YACP,KAAK,EAAE,EAAE;SACV,CAAC;QAGA,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QACzC,IAAI,IAAI,IAAI,IAAI,EAAE;YAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAClC;IACH,CAAC;IAEM,OAAO,CAAE,IAAU;QACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACpD,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;QACvC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC;IACjC,CAAC;;8EArBU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;ACEb,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,0BAA0B;KACnC;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,qEAAmB;QACnB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICG/B,sEAAoD;IAClD,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,uEAAyC;IAAnB,2SAAkB;IAAC,kEAAO;IAAA,4DAAI;IACtD,4DAAM;;;IAFA,0DAAuB;IAAvB,yFAAuB;;;IAK3B,uEAAmD;IAAC,oEAAQ;IAAA,4DAAI;;ACA3D,MAAM,eAAe;IAG1B,YACU,mBAAwC,EACxC,eAAgC,EAChC,eAAgC;QAFhC,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,oBAAe,GAAf,eAAe,CAAiB;QAChC,oBAAe,GAAf,eAAe,CAAiB;QALnC,UAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK;IAMtC,CAAC;IAEG,MAAM;QACX,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE;QACjC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;QAClC,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;IACnC,CAAC;;8EAbU,eAAe;+FAAf,eAAe;QDV5B,uEAAkB;QAChB,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACrB,4DAAI;QAEJ,2GAGM;;QAEN,uMAEc;;;;QAPR,0DAA8B;QAA9B,uLAA8B;;;;;;;;;;;;;;AEHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACR;AACS;AACH;AAET;AACsB;AACX;;;AAalD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;YACrD,wEAAqB;SACtB;mIAIU,SAAS,mBAVL,2DAAY,EAAE,iFAAe,aAE1C,uEAAa;QACb,oEAAgB,mEAEhB,wEAAqB;;;;;;;;;;;;;;;;;ACTlB,MAAM,eAAe;IAH5B;QAKS,aAAQ,GAAqB,IAAI,GAAG,CAAe,EAAE,CAAC;KAiC9D;IA/BQ,QAAQ,CAAE,KAA6B;QAC5C,IAAI,CAAC,KAAK,GAAG,KAAK;IACpB,CAAC;IAEM,eAAe,CAAE,GAAS;QAC/B,MAAM,YAAY,GAA0B,EAAE;QAC9C,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;YAC5B,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,GAAG,CAAC,YAAY,EAAE,EAAE;gBAC9D,YAAY,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;aACpC;SACF;QACD,OAAO,YAAY;IACrB,CAAC;IAEM,YAAY,CAAE,GAAS;QAC5B,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;SAAE;QACzD,MAAM,SAAS,GAAW,EAAE;QAC5B,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE;YAC3C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAChC;QACD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC;SAAE;IACjE,CAAC;IAEM,UAAU,CAAE,GAAW;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IACxB,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,KAAK,GAAG,EAAE;QACf,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;IACvB,CAAC;;8EAlCU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;ACJkC;;;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,GAAS,EAAE;YACvB,aAAM,qTAA8C,CAAC,IAAI,CACvD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,eAAe,CACzB;UAAA;KACJ;IACD;QACE,IAAI,EAAE,eAAe;QACrB,YAAY,EAAE,GAAS,EAAE,gGACvB,aAAM,uRAAoC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;KACvE;CACF;AAMM,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACpBsB;AAGF;AACY;AAExD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE;CACjB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;;;;;;;;;;;ACXnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: 'AIzaSyAsaJIGqvhCaxlUDDmyXqSjKNArwaT6SXM',\r\n    authDomain: 'innowisepracticelevel1.firebaseapp.com',\r\n    projectId: 'innowisepracticelevel1',\r\n    databaseURL: 'https://innowisepracticelevel1-default-rtdb.firebaseio.com',\r\n    storageBucket: 'innowisepracticelevel1.appspot.com',\r\n    messagingSenderId: '678231746401',\r\n    appId: '1:678231746401:web:9bfd49416d71d73844c720',\r\n    measurementId: 'G-LX1GLSW2SN'\r\n  }\r\n}\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core'\r\nimport { AngularFireAuth } from '@angular/fire/auth'\r\nimport { from, Observable } from 'rxjs'\r\nimport { map } from 'rxjs/operators'\r\nimport { User } from '../../interfaces/user'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirebaseAuthService {\r\n  constructor (private firebaseAuth: AngularFireAuth) {}\r\n\r\n  public signIn (email: string, password: string): Observable<User> {\r\n    return from(\r\n      this.firebaseAuth.signInWithEmailAndPassword(email, password)\r\n    ).pipe(\r\n      map((response) => {\r\n        const user = response.user\r\n        return {\r\n          uid: user?.uid == null ? '' : user.uid,\r\n          email: user?.email == null ? '' : user.email\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  public signUp (email: string, password: string): Observable<User> {\r\n    return from(\r\n      this.firebaseAuth.createUserWithEmailAndPassword(email, password)\r\n    ).pipe(\r\n      map((response) => {\r\n        const user = response.user\r\n        return {\r\n          uid: user?.uid == null ? '' : user.uid,\r\n          email: user?.email == null ? '' : user.email\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  public logOut (): void {\r\n    this.firebaseAuth.signOut()\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { BehaviorSubject } from 'rxjs'\r\nimport { User } from '../../interfaces/user'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserDataService {\r\n  public user$: BehaviorSubject<User> = new BehaviorSubject<User>({\r\n    uid: '',\r\n    email: ''\r\n  })\r\n\r\n  constructor () {\r\n    const user = localStorage.getItem('user')\r\n    if (user != null) {\r\n      this.user$.next(JSON.parse(user))\r\n    }\r\n  }\r\n\r\n  public setUser (user: User): void {\r\n    this.user$.next(user)\r\n    localStorage.setItem('user', JSON.stringify(user))\r\n  }\r\n\r\n  public deleteuser (): void {\r\n    this.user$.next({ uid: '', email: '' })\r\n    localStorage.removeItem('user')\r\n  }\r\n}\r\n","import { Component } from '@angular/core'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Innowise-Practice-Level1'\r\n}\r\n","<top-bar></top-bar>\r\n<router-outlet></router-outlet>\r\n\r\n","<a routerLink=\"/\">\r\n  <h1>TASK DIARY</h1>\r\n</a>\r\n\r\n<div *ngIf=\"(user$ | async)?.email; else elseBlock\">\r\n  <h3>{{ user$.value.email }}</h3>\r\n  <a class=\"outBtn Btn\" (click)=\"logOut()\">Log Out</a>\r\n</div>\r\n\r\n<ng-template #elseBlock>\r\n  <a class=\"signBtn Btn\" routerLink=\"/authorization\"> Sign In </a>\r\n</ng-template>\r\n","import { Component } from '@angular/core'\r\nimport { FirebaseAuthService } from 'src/app/shared/services/firebase/firebase-auth.service'\r\nimport { UserDataService } from 'src/app/shared/services/data/user-data.service'\r\nimport { TaskDataService } from '../services/data/task-data.service'\r\n\r\n@Component({\r\n  selector: 'top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.scss']\r\n})\r\nexport class TopBarComponent {\r\n  public user$ = this.userDataService.user$\r\n\r\n  constructor (\r\n    private fireBaseAuthService: FirebaseAuthService,\r\n    private userDataService: UserDataService,\r\n    private taskDataService: TaskDataService\r\n  ) {}\r\n\r\n  public logOut (): void {\r\n    this.fireBaseAuthService.logOut()\r\n    this.taskDataService.deleteTasks()\r\n    this.userDataService.deleteuser()\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { AngularFireModule } from '@angular/fire'\r\nimport { AngularFireAuthModule } from '@angular/fire/auth'\r\nimport { AppRoutingModule } from './app-routing.module'\r\n\r\nimport { AppComponent } from './app.component'\r\nimport { TopBarComponent } from './shared/top-bar/top-bar.component'\r\nimport { environment } from '../environments/environment'\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, TopBarComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAuthModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core'\r\n\r\nimport { Task } from '../../interfaces/task'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskDataService {\r\n  public tasks!: { [id: string]: Task }\r\n  public tasksMap: Map<Date, Task[]>= new Map<Date, Task[]>([])\r\n\r\n  public setTasks (tasks: { [id: string]: Task }): void {\r\n    this.tasks = tasks\r\n  }\r\n\r\n  public getCurrentTasks (day: Date): { [id: string]: Task } {\r\n    const currentTasks: { [id: string]: any } = {}\r\n    for (const key in this.tasks) {\r\n      if (this.tasks[key].date.toDateString() === day.toDateString()) {\r\n        currentTasks[key] = this.tasks[key]\r\n      }\r\n    }\r\n    return currentTasks\r\n  }\r\n\r\n  public setTaskToMap (day: Date): void {\r\n    if (this.tasksMap.has(day)) { this.tasksMap.delete(day) }\r\n    const taskArray: Task[] = []\r\n    for (const key in this.getCurrentTasks(day)) {\r\n      taskArray.push(this.tasks[key])\r\n    }\r\n    if (taskArray.length > 0) { this.tasksMap.set(day, taskArray) }\r\n  }\r\n\r\n  public deleteTask (key: string): void {\r\n    delete this.tasks[key]\r\n  }\r\n\r\n  public deleteTasks (): void {\r\n    this.tasks = {}\r\n    this.tasksMap.clear()\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { RouterModule, Routes } from '@angular/router'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: async () =>\r\n      await import('./modules/organizer/organizer.module').then(\r\n        (m) => m.OrganizerModule\r\n      )\r\n  },\r\n  {\r\n    path: 'authorization',\r\n    loadChildren: async () =>\r\n      await import('./modules/auth/auth.module').then((m) => m.AuthModule)\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err))\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}