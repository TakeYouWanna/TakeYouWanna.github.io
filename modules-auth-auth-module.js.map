{"version":3,"sources":["./src/app/modules/auth/login-window/login-window.component.ts","./src/app/modules/auth/login-window/login-window.component.html","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/auth-routing.module.ts","./src/app/modules/auth/registr-window/registr-window.component.ts","./src/app/modules/auth/registr-window/registr-window.component.html"],"names":[],"mappings":"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","file":"modules-auth-auth-module.js","sourcesContent":["import { Component } from '@angular/core'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\r\nimport { FirebaseAuthService } from '../../../shared/services/firebase/firebase-auth.service'\r\nimport { UserDataService } from 'src/app/shared/services/data/user-data.service'\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'login-window',\r\n  templateUrl: './login-window.component.html',\r\n  styleUrls: ['./login-window.component.scss']\r\n})\r\nexport class LoginWindowComponent {\r\n  public user$ = this.userDataService.user$\r\n  public loginForm: FormGroup\r\n  public error: string = ''\r\n\r\n  constructor (\r\n    private firebaseAuthService: FirebaseAuthService,\r\n    private formBuilder: FormBuilder,\r\n    private userDataService: UserDataService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: [null, [Validators.required, Validators.email]],\r\n      password: [null, [Validators.required, Validators.minLength(6)]]\r\n    })\r\n  }\r\n\r\n  public onSubmit (): void {\r\n    this.firebaseAuthService\r\n      .signIn(this.loginForm.value.email, this.loginForm.value.password)\r\n      .subscribe(\r\n        (data) => {\r\n          this.userDataService.setUser(data)\r\n          this.router.navigate([''])\r\n        },\r\n        (err) => {\r\n          this.error = err.message\r\n          this.loginForm.reset()\r\n        }\r\n      )\r\n  }\r\n}\r\n","<form\r\n  [formGroup]=\"loginForm\"\r\n  (submit)=\"onSubmit()\"\r\n  *ngIf=\"!(user$ | async)?.email\"\r\n>\r\n  <div class=\"glass-window flex-cont\">\r\n    <h1>Sign In</h1>\r\n    <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\r\n    <label for=\"Login\">Your email:</label>\r\n    <input type=\"email\" id=\"Login\" formControlName=\"email\" />\r\n    <label for=\"Login\">Your password:</label>\r\n    <input type=\"password\" required id=\"Password\" formControlName=\"password\" />\r\n    <button type=\"submit\" [disabled]=\"loginForm.invalid\">Sign In</button>\r\n    <br />\r\n    <label for=\"regist-button\">If you are not registered </label>\r\n    <a routerLink=\"registration\">Registration</a>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core'\r\nimport { AuthRouterModule } from './auth-routing.module'\r\nimport { LoginWindowComponent } from './login-window/login-window.component'\r\nimport { RegistrWindowComponent } from './registr-window/registr-window.component'\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { CommonModule } from '@angular/common'\r\n\r\n@NgModule({\r\n  imports: [AuthRouterModule, ReactiveFormsModule, CommonModule],\r\n  declarations: [LoginWindowComponent, RegistrWindowComponent],\r\n  providers: []\r\n})\r\nexport class AuthModule {}\r\n","import { NgModule } from '@angular/core'\r\nimport { RouterModule, Routes } from '@angular/router'\r\nimport { LoginWindowComponent } from './login-window/login-window.component'\r\nimport { RegistrWindowComponent } from './registr-window/registr-window.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      { path: '', component: LoginWindowComponent },\r\n      { path: 'registration', component: RegistrWindowComponent }\r\n    ]\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRouterModule {}\r\n","import { Component } from '@angular/core'\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\r\nimport { Router } from '@angular/router'\r\nimport { FirebaseAuthService } from 'src/app/shared/services/firebase/firebase-auth.service'\r\nimport { UserDataService } from 'src/app/shared/services/data/user-data.service'\r\n\r\n@Component({\r\n  selector: 'registr-window',\r\n  templateUrl: './registr-window.component.html',\r\n  styleUrls: ['./registr-window.component.scss']\r\n})\r\nexport class RegistrWindowComponent {\r\n  public registForm: FormGroup\r\n  public user$ = this.userDataService.user$\r\n  public error: string = ''\r\n\r\n  constructor (\r\n    private userDataService: UserDataService,\r\n    private firebaseAuthService: FirebaseAuthService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n    this.registForm = this.formBuilder.group({\r\n      email: [null, [Validators.required, Validators.email]],\r\n      password: [null, [Validators.required, Validators.minLength(6)]],\r\n      passConfirm: [null, [Validators.required, Validators.minLength(6)]]\r\n    })\r\n  }\r\n\r\n  public onSubmit (): void {\r\n    const email = this.registForm.value.email\r\n    const password = this.registForm.value.password\r\n    if (password === this.registForm.value.passConfirm) {\r\n      this.firebaseAuthService.signUp(email, password).subscribe(\r\n        (data) => {\r\n          this.userDataService.setUser(data)\r\n          this.router.navigate([''])\r\n        },\r\n        (err) => {\r\n          this.error = err.message\r\n          this.registForm.reset()\r\n        }\r\n      )\r\n    } else {\r\n      this.error = 'Passwords do not match'\r\n    }\r\n  }\r\n}\r\n","<form\r\n  [formGroup]=\"registForm\"\r\n  (submit)=\"onSubmit()\"\r\n  *ngIf=\"!(user$ | async)?.email\"\r\n>\r\n  <div class=\"glass-window flex-cont\">\r\n    <h1>Sign Up</h1>\r\n    <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\r\n    <label for=\"Login\">Your email:</label>\r\n    <input type=\"email\" id=\"Login\" formControlName=\"email\" />\r\n\r\n    <label for=\"Password\">Your password:</label>\r\n    <input type=\"password\" required id=\"Password\" formControlName=\"password\" />\r\n\r\n    <label for=\"PasswordConfirm\">Password confirmation:</label>\r\n    <input\r\n      type=\"password\"\r\n      required\r\n      id=\"PasswordConfirm\"\r\n      formControlName=\"passConfirm\"\r\n    />\r\n    <button type=\"submit\" [disabled]=\"registForm.invalid\">Register</button>\r\n  </div>\r\n</form>\r\n"],"sourceRoot":"webpack:///"}