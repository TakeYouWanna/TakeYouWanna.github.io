{"version":3,"sources":["./src/app/modules/mini-paint/drawing-properties/drawing-properties.component.ts","./src/app/modules/mini-paint/drawing-properties/drawing-properties.component.html","./src/app/modules/mini-paint/mini-paint.module.ts","./src/app/shared/services/drawing/drawing.service.ts","./src/app/modules/mini-paint/mini-paint.component.ts","./src/app/modules/mini-paint/mini-paint.component.html","./src/app/shared/services/drawing/classes/text-drawing.ts","./src/app/shared/services/drawing/classes/coordinates.ts","./src/app/modules/mini-paint/mini-paint-routing.module.ts","./src/app/modules/mini-paint/drawing-tools/drawing-tools.component.ts","./src/app/modules/mini-paint/drawing-tools/drawing-tools.component.html","./src/app/shared/services/drawing/classes/drawing.ts","./src/app/shared/services/drawing/classes/star-drawing.ts","./src/app/shared/services/drawing/classes/rect-drawing.ts","./src/app/shared/services/drawing/classes/brush-drawing.ts","./src/app/shared/services/drawing/classes/line-drawing.ts","./src/app/shared/services/drawing/classes/circle-drawing.ts","./src/app/shared/services/drawing/classes/drawing-method.ts"],"names":[],"mappings":"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","file":"modules-mini-paint-mini-paint-module.js","sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FigureProperties } from 'src/app/shared/interfaces/figure-properties.interface';\r\nimport { TextProperties } from 'src/app/shared/interfaces/text-properties.interface';\r\n\r\n@Component({\r\n  selector: 'app-drawing-properties',\r\n  templateUrl: './drawing-properties.component.html',\r\n  styleUrls: ['./drawing-properties.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DrawingPropertiesComponent implements OnInit {\r\n  public figurePropertiesForm: FormGroup;\r\n\r\n  public textPropertiesForm: FormGroup;\r\n\r\n  @Input()\r\n  public textForm: TextProperties;\r\n\r\n  @Input()\r\n  public figureForm: FigureProperties;\r\n\r\n  @Output()\r\n  public figureFormChange = new EventEmitter<FigureProperties>();\r\n\r\n  @Output()\r\n  public textFormChange = new EventEmitter<TextProperties>();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.figurePropertiesForm = this.formBuilder.group({\r\n      lineWidth: [1, [Validators.min(1), Validators.max(10)]],\r\n      lineColor: ['#000000'],\r\n      fillColor: ['#000000'],\r\n      filling: [false],\r\n    });\r\n\r\n    this.textPropertiesForm = this.formBuilder.group({\r\n      font: ['Times New Roman'],\r\n      fontSize: [10, [Validators.min(1), Validators.max(50)]],\r\n      fontColor: ['#000000'],\r\n      fontWeight: [false],\r\n      fontCursive: [false],\r\n      text: [''],\r\n    });\r\n\r\n    this.figurePropertiesForm.valueChanges.subscribe(\r\n      (figureProperties: FigureProperties) => {\r\n        this.figureFormChange.emit(figureProperties);\r\n      }\r\n    );\r\n\r\n    this.textPropertiesForm.valueChanges.subscribe(\r\n      (textProperties: TextProperties) => {\r\n        this.textFormChange.emit(textProperties);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form [formGroup]=\"figurePropertiesForm\">\r\n  <h3 class=\"coloredText\">Figure properties</h3>\r\n  <span>line width: {{ figurePropertiesForm.controls.lineWidth.value }}</span>\r\n  <input type=\"range\" formControlName=\"lineWidth\" min=\"1\" max=\"10\" />\r\n  <label>Line color <input type=\"color\" formControlName=\"lineColor\" /></label>\r\n  <label>Fill color <input type=\"color\" formControlName=\"fillColor\" /></label>\r\n  <label\r\n    >Filling\r\n    <input type=\"checkbox\" formControlName=\"filling\" />\r\n  </label>\r\n</form>\r\n<form [formGroup]=\"textPropertiesForm\">\r\n  <h3 class=\"coloredText\">Text properties</h3>\r\n  <select formControlName=\"font\">\r\n    <option>Times New Roman</option>\r\n    <option>Impact</option>\r\n    <option>Arial</option>\r\n    <option>Verdana</option>\r\n    <option>Courier</option>\r\n    <option>Comic Sans MS</option>\r\n  </select>\r\n  <label>\r\n    Font size\r\n    <input type=\"number\" min=\"1\" max=\"50\" formControlName=\"fontSize\"\r\n  /></label>\r\n  <label>Font color <input type=\"color\" formControlName=\"fontColor\" /></label>\r\n  <label class=\"font-style\">\r\n    Font style\r\n    <input type=\"checkbox\" id=\"weight-checkbox\" formControlName=\"fontWeight\" />\r\n    <label for=\"weight-checkbox\" class=\"weight-font\">Ж</label>\r\n    <input\r\n      type=\"checkbox\"\r\n      id=\"cursive-checkbox\"\r\n      formControlName=\"fontCursive\"\r\n    />\r\n    <label for=\"cursive-checkbox\" class=\"cursive-font\">К</label>\r\n  </label>\r\n  <label>Your text</label>\r\n  <input type=\"text\" formControlName=\"text\" />\r\n</form>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MiniPaintRoutingModule } from './mini-paint-routing.module';\r\nimport { MiniPaintComponent } from './mini-paint.component';\r\nimport { DrawingPropertiesComponent } from './drawing-properties/drawing-properties.component';\r\nimport { DrawingToolsComponent } from './drawing-tools/drawing-tools.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MiniPaintRoutingModule, ReactiveFormsModule],\r\n  declarations: [\r\n    MiniPaintComponent,\r\n    DrawingPropertiesComponent,\r\n    DrawingToolsComponent,\r\n  ],\r\n})\r\nexport class MiniPaintModule {}\r\n","import { ElementRef, Injectable } from '@angular/core';\r\nimport { FigureProperties } from '../../interfaces/figure-properties.interface';\r\nimport { TextProperties } from '../../interfaces/text-properties.interface';\r\nimport { DrawingMethod } from './classes/drawing-method';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DrawingService {\r\n  constructor() {}\r\n\r\n  public startDrawing(\r\n    drawingMethod: string,\r\n    canvas: ElementRef<HTMLCanvasElement>,\r\n    context: CanvasRenderingContext2D,\r\n    figureProperties: FigureProperties,\r\n    textProperties: TextProperties,\r\n    event: MouseEvent | TouchEvent\r\n  ): void {\r\n    const drawing = new DrawingMethod(\r\n      canvas,\r\n      context,\r\n      figureProperties,\r\n      textProperties,\r\n      event\r\n    );\r\n\r\n    drawing.create(drawingMethod).startDrawing();\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { FigureProperties } from 'src/app/shared/interfaces/figure-properties.interface';\r\nimport { TextProperties } from 'src/app/shared/interfaces/text-properties.interface';\r\nimport { DrawingService } from 'src/app/shared/services/drawing/drawing.service';\r\nimport { State } from 'src/app/store';\r\nimport { addPicture } from 'src/app/store/picture-list/actions';\r\nimport { selectUserUid } from 'src/app/store/user/selectors';\r\n\r\n@Component({\r\n  selector: 'app-mini-paint',\r\n  templateUrl: './mini-paint.component.html',\r\n  styleUrls: ['./mini-paint.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MiniPaintComponent implements AfterViewInit {\r\n  @ViewChild('canvas') public canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  public uid$: Observable<string> = this.store$.pipe(select(selectUserUid));\r\n\r\n  public context: CanvasRenderingContext2D;\r\n\r\n  public figureProperties: FigureProperties;\r\n\r\n  public textProperties: TextProperties;\r\n\r\n  public toolName: string;\r\n\r\n  public saving = false;\r\n\r\n  constructor(\r\n    private drawingService: DrawingService,\r\n    private store$: Store<State>\r\n  ) {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    const context = this.canvas.nativeElement.getContext('2d');\r\n    if (context !== null) {\r\n      this.context = context;\r\n    }\r\n    const canvasRect = this.canvas.nativeElement.getBoundingClientRect();\r\n    const scale = window.devicePixelRatio;\r\n    this.canvas.nativeElement.width = canvasRect.width * scale;\r\n    this.canvas.nativeElement.height = canvasRect.height * scale;\r\n    this.context.scale(scale, scale);\r\n\r\n    this.canvas.nativeElement.addEventListener('mousedown', (event) =>\r\n      this.startDrawing(event)\r\n    );\r\n\r\n    this.canvas.nativeElement.addEventListener('touchstart', (event) =>\r\n      this.startDrawing(event)\r\n    );\r\n  }\r\n\r\n  public startDrawing(event: TouchEvent | MouseEvent): void {\r\n    this.drawingService.startDrawing(\r\n      this.toolName,\r\n      this.canvas,\r\n      this.context,\r\n      this.figureProperties,\r\n      this.textProperties,\r\n      event\r\n    );\r\n  }\r\n\r\n  public clear(): void {\r\n    this.context.clearRect(\r\n      0,\r\n      0,\r\n      this.canvas.nativeElement.width,\r\n      this.canvas.nativeElement.height\r\n    );\r\n  }\r\n\r\n  public save(): void {\r\n    const pictureSrc = this.canvas.nativeElement.toDataURL('image/png');\r\n    this.store$.dispatch(addPicture({ pictureSrc }));\r\n  }\r\n}\r\n","<app-drawing-tools\r\n  class=\"window-div\"\r\n  [(toolName)]=\"toolName\"\r\n  (drawingClear)=\"clear()\"\r\n  (drawingSave)=\"save()\"\r\n></app-drawing-tools>\r\n\r\n<canvas #canvas></canvas>\r\n\r\n<app-drawing-properties\r\n  class=\"window-div\"\r\n  [(figureForm)]=\"figureProperties\"\r\n  [(textForm)]=\"textProperties\"\r\n></app-drawing-properties>\r\n","import { Drawing } from './drawing';\r\n\r\nexport class TextDrawing extends Drawing {\r\n  public startDrawing(): void {\r\n    const oldContext = this.copyDrawing();\r\n    this.coordinates\r\n      .getDiffCurrentPosition(this.paintingKit.event, this.paintingKit.canvas)\r\n      .subscribe(([_, to]) => {\r\n        this.redraw(oldContext);\r\n        if (this.paintingKit.textProperties) {\r\n          const fontWeight = this.paintingKit.textProperties.fontWeight\r\n            ? 'bold'\r\n            : 'normal';\r\n          const fontStyle = this.paintingKit.textProperties.fontCursive\r\n            ? 'italic'\r\n            : 'normal';\r\n          this.paintingKit.context.fillStyle = this.paintingKit.textProperties.fontColor;\r\n          this.paintingKit.context.font = `${fontStyle} ${fontWeight} ${this.paintingKit.textProperties.fontSize}px ${this.paintingKit.textProperties.font}`;\r\n        }\r\n        this.paintingKit.context.fillText(\r\n          this.paintingKit.textProperties.text,\r\n          to.x,\r\n          to.y\r\n        );\r\n      });\r\n  }\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { map, pairwise, takeUntil } from 'rxjs/operators';\r\nimport { Coords } from 'src/app/shared/services/drawing/interfaces/coords.interface';\r\n\r\nexport class Coordinates {\r\n  public getDiffCurrentPosition(\r\n    $event: MouseEvent | TouchEvent,\r\n    canvas: ElementRef<HTMLCanvasElement>\r\n  ): Observable<[Coords, Coords]> {\r\n    if ($event instanceof MouseEvent) {\r\n      return this.getDiffCurrentMouseCoordinates(canvas);\r\n    }\r\n    return this.getDiffCurrentTouchCoordinates(canvas);\r\n  }\r\n\r\n  private getDiffCurrentTouchCoordinates(\r\n    canvas: ElementRef<HTMLCanvasElement>\r\n  ): Observable<[Coords, Coords]> {\r\n    const touchMove$ = fromEvent(canvas.nativeElement, 'touchmove');\r\n    const touchEnd$ = fromEvent(canvas.nativeElement, 'touchend');\r\n    const touchCancel$ = fromEvent(canvas.nativeElement, 'touchcancel');\r\n    return touchMove$.pipe(\r\n      map(($event) => {\r\n        if ($event instanceof TouchEvent) {\r\n          $event.preventDefault();\r\n          return {\r\n            x:\r\n              $event.changedTouches[0].clientX -\r\n              canvas.nativeElement.offsetLeft,\r\n            y:\r\n              $event.changedTouches[0].clientY - canvas.nativeElement.offsetTop,\r\n          };\r\n        }\r\n        return {\r\n          x: 0,\r\n          y: 0,\r\n        };\r\n      }),\r\n      pairwise(),\r\n      takeUntil(touchEnd$),\r\n      takeUntil(touchCancel$)\r\n    );\r\n  }\r\n\r\n  private getDiffCurrentMouseCoordinates(\r\n    canvas: ElementRef<HTMLCanvasElement>\r\n  ): Observable<[Coords, Coords]> {\r\n    const mouseMove$ = fromEvent(canvas.nativeElement, 'mousemove');\r\n    const mouseUp$ = fromEvent(canvas.nativeElement, 'mouseup');\r\n    const mouseOut$ = fromEvent(canvas.nativeElement, 'mouseout');\r\n    return mouseMove$.pipe(\r\n      map(($event) => {\r\n        if ($event instanceof MouseEvent) {\r\n          $event.preventDefault();\r\n          return {\r\n            x: $event.offsetX,\r\n            y: $event.offsetY,\r\n          };\r\n        }\r\n        return {\r\n          x: 0,\r\n          y: 0,\r\n        };\r\n      }),\r\n      pairwise(),\r\n      takeUntil(mouseUp$),\r\n      takeUntil(mouseOut$)\r\n    );\r\n  }\r\n\r\n  public getCoords(\r\n    $event: MouseEvent | TouchEvent,\r\n    canvas: ElementRef<HTMLCanvasElement>\r\n  ): Coords {\r\n    if ($event instanceof MouseEvent) {\r\n      return {\r\n        x: $event.offsetX,\r\n        y: $event.offsetY,\r\n      };\r\n    }\r\n    return {\r\n      x: $event.changedTouches[0].clientX - canvas.nativeElement.offsetLeft,\r\n      y: $event.changedTouches[0].clientY - canvas.nativeElement.offsetTop,\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MiniPaintComponent } from './mini-paint.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MiniPaintComponent,\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MiniPaintRoutingModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { select, Store } from '@ngrx/store';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { State } from 'src/app/store';\r\nimport { PictureListActionsType } from 'src/app/store/picture-list/constant';\r\nimport { selectUserUid } from 'src/app/store/user/selectors';\r\n\r\n@Component({\r\n  selector: 'app-drawing-tools',\r\n  templateUrl: './drawing-tools.component.html',\r\n  styleUrls: ['./drawing-tools.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DrawingToolsComponent implements OnInit, OnDestroy {\r\n  public toolsList: { [tool: string]: string } = {};\r\n\r\n  public uid$ = this.store$.pipe(select(selectUserUid));\r\n\r\n  public saving: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  @Input()\r\n  public toolName: string;\r\n\r\n  @Output()\r\n  public toolNameChange: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  @Output()\r\n  public drawingSave: EventEmitter<null> = new EventEmitter<null>();\r\n\r\n  @Output()\r\n  public drawingClear: EventEmitter<null> = new EventEmitter<null>();\r\n\r\n  constructor(private store$: Store<State>, private actions$: Actions) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.toolsList.brush = '../../../../assets/icons/brush.png';\r\n    this.toolsList.rectangle = '../../../../assets/icons/rect.png';\r\n    this.toolsList.line = '../../../../assets/icons/line.png';\r\n    this.toolsList.circle = '../../../../assets/icons/circle.png';\r\n    this.toolsList.star = '../../../../assets/icons/star.png';\r\n    this.toolsList.text = '../../../../assets/icons/text.png';\r\n  }\r\n\r\n  public save(): void {\r\n    this.drawingSave.emit();\r\n    this.saving.next(true);\r\n    this.actions$\r\n      .pipe(ofType(PictureListActionsType.addPictureSuccess))\r\n      .subscribe(() => {\r\n        this.saving.next(false);\r\n      });\r\n  }\r\n\r\n  public trackByObject(index: number, item: object): number {\r\n    return index;\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.saving.complete();\r\n  }\r\n}\r\n","<button\r\n  *ngFor=\"let tool of toolsList | keyvalue; trackBy: trackByObject\"\r\n  (click)=\"toolNameChange.emit(tool.key)\"\r\n  [disabled]=\"toolName == tool.key\"\r\n  class=\"coloredBackground\"\r\n>\r\n  <img [src]=\"tool.value\" />\r\n</button>\r\n\r\n<button (click)=\"drawingClear.emit()\" class=\"coloredBackground\">\r\n  <img src=\"../../../../assets/icons/clear.png\" />\r\n</button>\r\n<button\r\n  (click)=\"save()\"\r\n  class=\"coloredBackground\"\r\n  *ngIf=\"uid$ | async\"\r\n  [disabled]=\"saving | async\"\r\n>\r\n  <img src=\"../../../../assets/icons/save.png\" />\r\n</button>\r\n","import { PaintingKit } from 'src/app/shared/services/drawing/interfaces/painting-kit.interface';\r\nimport { Coordinates } from './coordinates';\r\n\r\nexport class Drawing {\r\n  public paintingKit: PaintingKit = null;\r\n\r\n  public coordinates = new Coordinates();\r\n\r\n  constructor(paintingKit: PaintingKit) {\r\n    this.paintingKit = paintingKit;\r\n  }\r\n\r\n  public redraw(oldContext: ImageData): void {\r\n    this.clearDrawing();\r\n    this.paintingKit.context.putImageData(oldContext, 0, 0);\r\n  }\r\n\r\n  public clearDrawing(): void {\r\n    this.paintingKit.context.clearRect(\r\n      0,\r\n      0,\r\n      this.paintingKit.canvas.nativeElement.width,\r\n      this.paintingKit.canvas.nativeElement.height\r\n    );\r\n  }\r\n\r\n  public copyDrawing(): ImageData {\r\n    return this.paintingKit.context.getImageData(\r\n      0,\r\n      0,\r\n      this.paintingKit.canvas.nativeElement.width,\r\n      this.paintingKit.canvas.nativeElement.height\r\n    );\r\n  }\r\n\r\n  public startDrawing(): void {}\r\n}\r\n","import { Drawing } from './drawing';\r\n\r\nexport class StarDrawing extends Drawing {\r\n  public startDrawing(): void {\r\n    const oldContext = this.copyDrawing();\r\n    const startCoords = this.coordinates.getCoords(\r\n      this.paintingKit.event,\r\n      this.paintingKit.canvas\r\n    );\r\n    this.coordinates\r\n      .getDiffCurrentPosition(this.paintingKit.event, this.paintingKit.canvas)\r\n      .subscribe(([_, to]) => {\r\n        this.redraw(oldContext);\r\n        const middleX = startCoords.x + (to.x - startCoords.x) / 2;\r\n        const middleY = startCoords.y + (to.y - startCoords.y) / 2;\r\n        const outerRadius =\r\n          Math.sqrt((to.x - startCoords.x) ** 2 + (to.y - startCoords.y) ** 2) /\r\n          2;\r\n        const innerRadius = outerRadius / 2;\r\n        let rot = (Math.PI / 2) * 3;\r\n        let x = middleX;\r\n        let y = middleY;\r\n        const step = Math.PI / 5;\r\n\r\n        this.paintingKit.context.beginPath();\r\n        this.paintingKit.context.moveTo(middleX, middleY - outerRadius);\r\n        for (let i = 0; i < 5; i++) {\r\n          x = middleX + Math.cos(rot) * outerRadius;\r\n          y = middleY + Math.sin(rot) * outerRadius;\r\n          this.paintingKit.context.lineTo(x, y);\r\n          rot += step;\r\n\r\n          x = middleX + Math.cos(rot) * innerRadius;\r\n          y = middleY + Math.sin(rot) * innerRadius;\r\n          this.paintingKit.context.lineTo(x, y);\r\n          rot += step;\r\n        }\r\n        this.paintingKit.context.lineTo(middleX, middleY - outerRadius);\r\n        if (this.paintingKit.figureProperties) {\r\n          this.paintingKit.context.lineWidth = this.paintingKit.figureProperties.lineWidth;\r\n          this.paintingKit.context.fillStyle = this.paintingKit.figureProperties.fillColor;\r\n          this.paintingKit.context.strokeStyle = this.paintingKit.figureProperties.lineColor;\r\n          if (this.paintingKit.figureProperties.filling) {\r\n            this.paintingKit.context.fill();\r\n          }\r\n        }\r\n        this.paintingKit.context.stroke();\r\n      });\r\n  }\r\n}\r\n","import { Drawing } from './drawing';\r\n\r\nexport class RectDrawing extends Drawing {\r\n  public startDrawing(): void {\r\n    const oldContext = this.copyDrawing();\r\n    const startCoords = this.coordinates.getCoords(\r\n      this.paintingKit.event,\r\n      this.paintingKit.canvas\r\n    );\r\n    this.coordinates\r\n      .getDiffCurrentPosition(this.paintingKit.event, this.paintingKit.canvas)\r\n      .subscribe(([_, to]) => {\r\n        this.redraw(oldContext);\r\n        this.paintingKit.context.beginPath();\r\n        this.paintingKit.context.rect(\r\n          startCoords.x,\r\n          startCoords.y,\r\n          to.x - startCoords.x,\r\n          to.y - startCoords.y\r\n        );\r\n        if (this.paintingKit.figureProperties) {\r\n          this.paintingKit.context.lineWidth = this.paintingKit.figureProperties.lineWidth;\r\n          this.paintingKit.context.fillStyle = this.paintingKit.figureProperties.fillColor;\r\n          this.paintingKit.context.strokeStyle = this.paintingKit.figureProperties.lineColor;\r\n          if (this.paintingKit.figureProperties.filling) {\r\n            this.paintingKit.context.fill();\r\n          }\r\n        }\r\n        this.paintingKit.context.stroke();\r\n      });\r\n  }\r\n}\r\n","import { Drawing } from './drawing';\r\n\r\nexport class BrushDrawing extends Drawing {\r\n  public startDrawing(): void {\r\n    this.coordinates\r\n      .getDiffCurrentPosition(this.paintingKit.event, this.paintingKit.canvas)\r\n      .subscribe(([from, to]) => {\r\n        if (this.paintingKit.figureProperties) {\r\n          this.paintingKit.context.lineWidth = this.paintingKit.figureProperties.lineWidth;\r\n          this.paintingKit.context.strokeStyle = this.paintingKit.figureProperties.lineColor;\r\n        }\r\n        this.paintingKit.context.fillStyle = 'white';\r\n        this.paintingKit.context.lineJoin = 'round';\r\n        this.paintingKit.context.lineCap = 'round';\r\n        this.paintingKit.context.beginPath();\r\n        this.paintingKit.context.moveTo(from.x, from.y);\r\n        this.paintingKit.context.lineTo(to.x, to.y);\r\n        this.paintingKit.context.stroke();\r\n      });\r\n  }\r\n}\r\n","import { Drawing } from './drawing';\r\n\r\nexport class LineDrawing extends Drawing {\r\n  public startDrawing(): void {\r\n    const oldContext = this.copyDrawing();\r\n    const startCoords = this.coordinates.getCoords(\r\n      this.paintingKit.event,\r\n      this.paintingKit.canvas\r\n    );\r\n    this.coordinates\r\n      .getDiffCurrentPosition(this.paintingKit.event, this.paintingKit.canvas)\r\n      .subscribe(([_, to]) => {\r\n        this.redraw(oldContext);\r\n        this.paintingKit.context.beginPath();\r\n        this.paintingKit.context.moveTo(startCoords.x, startCoords.y);\r\n        this.paintingKit.context.lineTo(to.x, to.y);\r\n        if (this.paintingKit.figureProperties) {\r\n          this.paintingKit.context.lineWidth = this.paintingKit.figureProperties.lineWidth;\r\n          this.paintingKit.context.strokeStyle = this.paintingKit.figureProperties.lineColor;\r\n        }\r\n        this.paintingKit.context.stroke();\r\n      });\r\n  }\r\n}\r\n","import { Drawing } from './drawing';\r\n\r\nexport class CircleDrawing extends Drawing {\r\n  public startDrawing(): void {\r\n    const oldContext = this.copyDrawing();\r\n    const startCoords = this.coordinates.getCoords(\r\n      this.paintingKit.event,\r\n      this.paintingKit.canvas\r\n    );\r\n    this.coordinates\r\n      .getDiffCurrentPosition(this.paintingKit.event, this.paintingKit.canvas)\r\n      .subscribe(([_, to]) => {\r\n        this.redraw(oldContext);\r\n        this.paintingKit.context.beginPath();\r\n\r\n        const radius =\r\n          Math.sqrt((to.x - startCoords.x) ** 2 + (to.y - startCoords.y) ** 2) /\r\n          2;\r\n        this.paintingKit.context.arc(\r\n          startCoords.x + (to.x - startCoords.x) / 2,\r\n          startCoords.y + (to.y - startCoords.y) / 2,\r\n          radius,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        if (this.paintingKit.figureProperties) {\r\n          this.paintingKit.context.lineWidth = this.paintingKit.figureProperties.lineWidth;\r\n          this.paintingKit.context.fillStyle = this.paintingKit.figureProperties.fillColor;\r\n          this.paintingKit.context.strokeStyle = this.paintingKit.figureProperties.lineColor;\r\n          if (this.paintingKit.figureProperties.filling) {\r\n            this.paintingKit.context.fill();\r\n          }\r\n        }\r\n        this.paintingKit.context.stroke();\r\n      });\r\n  }\r\n}\r\n","import { ElementRef } from '@angular/core';\r\nimport { FigureProperties } from 'src/app/shared/interfaces/figure-properties.interface';\r\nimport { PaintingKit } from 'src/app/shared/services/drawing/interfaces/painting-kit.interface';\r\nimport { TextProperties } from 'src/app/shared/interfaces/text-properties.interface';\r\nimport { BrushDrawing } from './brush-drawing';\r\nimport { LineDrawing } from './line-drawing';\r\nimport { RectDrawing } from './rect-drawing';\r\nimport { CircleDrawing } from './circle-drawing';\r\nimport { StarDrawing } from './star-drawing';\r\nimport { TextDrawing } from './text-drawing';\r\n\r\nexport class DrawingMethod {\r\n  public paintingKit: PaintingKit = {\r\n    canvas: null,\r\n    context: null,\r\n    figureProperties: null,\r\n    textProperties: null,\r\n    event: null,\r\n  };\r\n\r\n  constructor(\r\n    canvas: ElementRef<HTMLCanvasElement>,\r\n    context: CanvasRenderingContext2D,\r\n    figureProperties: FigureProperties,\r\n    textProperties: TextProperties,\r\n    event: MouseEvent | TouchEvent\r\n  ) {\r\n    this.paintingKit.canvas = canvas;\r\n    this.paintingKit.context = context;\r\n    this.paintingKit.event = event;\r\n    this.paintingKit.figureProperties = figureProperties;\r\n    this.paintingKit.textProperties = textProperties;\r\n  }\r\n\r\n  public create(tool: string): any {\r\n    let method;\r\n    switch (tool) {\r\n      case 'pencil':\r\n        method = new BrushDrawing(this.paintingKit);\r\n        break;\r\n      case 'rectangle':\r\n        method = new RectDrawing(this.paintingKit);\r\n        break;\r\n      case 'line':\r\n        method = new LineDrawing(this.paintingKit);\r\n        break;\r\n      case 'circle':\r\n        method = new CircleDrawing(this.paintingKit);\r\n        break;\r\n      case 'star':\r\n        method = new StarDrawing(this.paintingKit);\r\n        break;\r\n      case 'text':\r\n        method = new TextDrawing(this.paintingKit);\r\n        break;\r\n      default:\r\n        method = new BrushDrawing(this.paintingKit);\r\n        break;\r\n    }\r\n    return method;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}